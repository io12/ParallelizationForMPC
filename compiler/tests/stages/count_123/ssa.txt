Function count_123(Seq: shared[list[int]], N: plaintext[int], Syms: shared[list[int]]):
Entry block: 0
Exit block: 3
Block 0:
    s1₁ = False
    s2₁ = False
    s3₁ = False
    c₁ = 0
    jump
Block 1:
    s1₂ = Φ(s1₁, s1₃)
    s2₂ = Φ(s2₁, s2₃)
    c₂ = Φ(c₁, c₄)
    !1₁ = Φ(!1₀, !1₂)
    !2₁ = Φ(!2₀, !2₂)
    !3₁ = Φ(!3₀, !3₂)
    !4₁ = Φ(!4₀, !4₂)
    !5₁ = Φ(!5₀, !5₂)
    for i: plaintext[int] in range(0, N₀)
Block 2:
    !1₂ = (Seq₀[i] == Syms₀[3])
    !2₂ = (s2₂ or s1₂)
    !3₂ = (!1₂ and !2₂)
    conditional jump !3₂
Block 3:
    return c₂
Block 4:
    c₃ = (c₂ + 1)
    jump
Block 5:
    jump
Block 6:
    c₄ = Φ(c₃, c₂)
    (merge from conditional jump !3₂)
    !4₂ = (Seq₀[i] == Syms₀[2])
    !5₂ = (s1₂ or s2₂)
    s2₃ = (!4₂ and !5₂)
    s1₃ = (Seq₀[i] == Syms₀[1])
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 5, F) (2, 4, T) (4, 6, *) (5, 6, *) (6, 1, *)
