Nodes:
    parameter Seq!0
    parameter N!0
    parameter Syms!0
    s0!1 = False
    c!1 = 0
    !7!0 = lift(s0!1, (i!1:N!0))
    !8!0 = lift(c!1, (i!1:N!0))
    !9!0 = lift(Seq!0[i!1], (i!1:N!0))
    !10!0 = lift(Syms!0[2], (i!1:N!0))
    !11!0 = lift(Seq!0[i!1], (i!1:N!0))
    !12!0 = lift(Syms!0[1], (i!1:N!0))
    !13!0 = lift(Seq!0[i!1], (i!1:N!0))
    !14!0 = lift(Syms!0[0], (i!1:N!0))
    for i!1 in range(0, N!0):
    s0!2 = Φ(!7!0, s0!3)
    c!2 = Φ(!8!0, c!4)
    !1!2 = (!9!0 == !10!0)
    !2!2 = (s0!2 and !1!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!2!2, c!3, c!2)
    !3!2 = (!11!0 == !12!0)
    !5!2 = (!13!0 == !14!0)
    !6!2 = (s0!2 and !5!2)
    s0!3 = (!3!2 or !6!2)
    s0!2 = Φ(!7!0, s0!3)
    c!2 = Φ(!8!0, c!4)
    !1!2 = (!9!0 == !10!0)
    !2!2 = (s0!2 and !1!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!2!2, c!3, c!2)
    !3!2 = (!11!0 == !12!0)
    !5!2 = (!13!0 == !14!0)
    !6!2 = (s0!2 and !5!2)
    s0!3 = (!3!2 or !6!2)
    !15!0 = drop_dim(c!2)
    return !15!0
Forward edges:
    parameter Seq!0  →  !9!0 = lift(Seq!0[i!1], (i!1:N!0))
    parameter Seq!0  →  !11!0 = lift(Seq!0[i!1], (i!1:N!0))
    parameter Seq!0  →  !13!0 = lift(Seq!0[i!1], (i!1:N!0))
    parameter Syms!0  →  !10!0 = lift(Syms!0[2], (i!1:N!0))
    parameter Syms!0  →  !12!0 = lift(Syms!0[1], (i!1:N!0))
    parameter Syms!0  →  !14!0 = lift(Syms!0[0], (i!1:N!0))
    s0!1 = False  →  !7!0 = lift(s0!1, (i!1:N!0))
    c!1 = 0  →  !8!0 = lift(c!1, (i!1:N!0))
    !7!0 = lift(s0!1, (i!1:N!0))  →  s0!2 = Φ(!7!0, s0!3)
    !8!0 = lift(c!1, (i!1:N!0))  →  c!2 = Φ(!8!0, c!4)
    !9!0 = lift(Seq!0[i!1], (i!1:N!0))  →  !1!2 = (!9!0 == !10!0)
    !10!0 = lift(Syms!0[2], (i!1:N!0))  →  !1!2 = (!9!0 == !10!0)
    !11!0 = lift(Seq!0[i!1], (i!1:N!0))  →  !3!2 = (!11!0 == !12!0)
    !12!0 = lift(Syms!0[1], (i!1:N!0))  →  !3!2 = (!11!0 == !12!0)
    !13!0 = lift(Seq!0[i!1], (i!1:N!0))  →  !5!2 = (!13!0 == !14!0)
    !14!0 = lift(Syms!0[0], (i!1:N!0))  →  !5!2 = (!13!0 == !14!0)
    for i!1 in range(0, N!0):
    s0!2 = Φ(!7!0, s0!3)
    c!2 = Φ(!8!0, c!4)
    !1!2 = (!9!0 == !10!0)
    !2!2 = (s0!2 and !1!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!2!2, c!3, c!2)
    !3!2 = (!11!0 == !12!0)
    !5!2 = (!13!0 == !14!0)
    !6!2 = (s0!2 and !5!2)
    s0!3 = (!3!2 or !6!2)  →  !9!0 = lift(Seq!0[i!1], (i!1:N!0))
    for i!1 in range(0, N!0):
    s0!2 = Φ(!7!0, s0!3)
    c!2 = Φ(!8!0, c!4)
    !1!2 = (!9!0 == !10!0)
    !2!2 = (s0!2 and !1!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!2!2, c!3, c!2)
    !3!2 = (!11!0 == !12!0)
    !5!2 = (!13!0 == !14!0)
    !6!2 = (s0!2 and !5!2)
    s0!3 = (!3!2 or !6!2)  →  !11!0 = lift(Seq!0[i!1], (i!1:N!0))
    for i!1 in range(0, N!0):
    s0!2 = Φ(!7!0, s0!3)
    c!2 = Φ(!8!0, c!4)
    !1!2 = (!9!0 == !10!0)
    !2!2 = (s0!2 and !1!2)
    c!3 = (c!2 + 1)
    c!4 = MUX(!2!2, c!3, c!2)
    !3!2 = (!11!0 == !12!0)
    !5!2 = (!13!0 == !14!0)
    !6!2 = (s0!2 and !5!2)
    s0!3 = (!3!2 or !6!2)  →  !13!0 = lift(Seq!0[i!1], (i!1:N!0))
    s0!2 = Φ(!7!0, s0!3)  →  !2!2 = (s0!2 and !1!2)
    s0!2 = Φ(!7!0, s0!3)  →  !6!2 = (s0!2 and !5!2)
    c!2 = Φ(!8!0, c!4)  →  c!3 = (c!2 + 1)
    c!2 = Φ(!8!0, c!4)  →  c!4 = MUX(!2!2, c!3, c!2)
    c!2 = Φ(!8!0, c!4)  →  !15!0 = drop_dim(c!2)
    !1!2 = (!9!0 == !10!0)  →  !2!2 = (s0!2 and !1!2)
    !2!2 = (s0!2 and !1!2)  →  c!4 = MUX(!2!2, c!3, c!2)
    c!3 = (c!2 + 1)  →  c!4 = MUX(!2!2, c!3, c!2)
    !3!2 = (!11!0 == !12!0)  →  s0!3 = (!3!2 or !6!2)
    !5!2 = (!13!0 == !14!0)  →  !6!2 = (s0!2 and !5!2)
    !6!2 = (s0!2 and !5!2)  →  s0!3 = (!3!2 or !6!2)
    !15!0 = drop_dim(c!2)  →  return !15!0
Back edges:
    c!4 = MUX(!2!2, c!3, c!2)  →  c!2 = Φ(!8!0, c!4)
    s0!3 = (!3!2 or !6!2)  →  s0!2 = Φ(!7!0, s0!3)
