Function longest_1s(Seq: shared[list[unsigned int]], N: plaintext[unsigned int], Sym: shared[unsigned int]):
Entry block: 0
Exit block: 3
Block 0:
    max_length = 0
    length = 0
    jump
Block 1:
    for i: plaintext[int] in range(1, N)
Block 2:
    !1 = (Seq[i] == Sym)
    conditional jump !1
Block 3:
    return max_length
Block 4:
    length = (length + 1)
    jump
Block 5:
    length = 0
    jump
Block 6:
    (merge from conditional jump !1)
    !2 = (length > max_length)
    conditional jump !2
Block 7:
    max_length = length
    jump
Block 8:
    jump
Block 9:
    (merge from conditional jump !2)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 5, F) (2, 4, T) (4, 6, *) (5, 6, *) (6, 8, F) (6, 7, T) (7, 9, *) (8, 9, *) (9, 1, *)
