Nodes:
    current_length₁ = 0
    max_length₁ = 0
    s2₁ = False
    current_length₂ = Φ(current_length₁, current_length₆)
    max_length₂ = Φ(max_length₁, max_length₄)
    s2₂ = Φ(s2₁, s2₃)
    !1₂ = (Seq₀[i] == Syms₀[1])
    s1₂ = (s2₂ and !1₂)
    !2₂ = not s2₂
    current_length₄ = 0
    current_length₅ = MUX(!2₂, current_length₄, current_length₂)
    current_length₃ = (current_length₂ + 1)
    current_length₆ = MUX(s1₂, current_length₃, current_length₅)
    !4₂ = (current_length₆ % 2)
    !5₂ = (!4₂ == 1)
    !6₂ = (current_length₆ > max_length₂)
    !7₂ = (!5₂ and !6₂)
    max_length₃ = current_length₆
    max_length₄ = MUX(!7₂, max_length₃, max_length₂)
    s2₃ = (Seq₀[i] == Syms₀[0])
Forward edges:
    current_length₁ = 0  →  current_length₂ = Φ(current_length₁, current_length₆)
    max_length₁ = 0  →  max_length₂ = Φ(max_length₁, max_length₄)
    s2₁ = False  →  s2₂ = Φ(s2₁, s2₃)
    current_length₂ = Φ(current_length₁, current_length₆)  →  current_length₅ = MUX(!2₂, current_length₄, current_length₂)
    current_length₂ = Φ(current_length₁, current_length₆)  →  current_length₃ = (current_length₂ + 1)
    max_length₂ = Φ(max_length₁, max_length₄)  →  !6₂ = (current_length₆ > max_length₂)
    max_length₂ = Φ(max_length₁, max_length₄)  →  max_length₄ = MUX(!7₂, max_length₃, max_length₂)
    s2₂ = Φ(s2₁, s2₃)  →  s1₂ = (s2₂ and !1₂)
    s2₂ = Φ(s2₁, s2₃)  →  !2₂ = not s2₂
    !1₂ = (Seq₀[i] == Syms₀[1])  →  s1₂ = (s2₂ and !1₂)
    s1₂ = (s2₂ and !1₂)  →  current_length₆ = MUX(s1₂, current_length₃, current_length₅)
    !2₂ = not s2₂  →  current_length₅ = MUX(!2₂, current_length₄, current_length₂)
    current_length₄ = 0  →  current_length₅ = MUX(!2₂, current_length₄, current_length₂)
    current_length₅ = MUX(!2₂, current_length₄, current_length₂)  →  current_length₆ = MUX(s1₂, current_length₃, current_length₅)
    current_length₃ = (current_length₂ + 1)  →  current_length₆ = MUX(s1₂, current_length₃, current_length₅)
    current_length₆ = MUX(s1₂, current_length₃, current_length₅)  →  !4₂ = (current_length₆ % 2)
    current_length₆ = MUX(s1₂, current_length₃, current_length₅)  →  !6₂ = (current_length₆ > max_length₂)
    current_length₆ = MUX(s1₂, current_length₃, current_length₅)  →  max_length₃ = current_length₆
    !4₂ = (current_length₆ % 2)  →  !5₂ = (!4₂ == 1)
    !5₂ = (!4₂ == 1)  →  !7₂ = (!5₂ and !6₂)
    !6₂ = (current_length₆ > max_length₂)  →  !7₂ = (!5₂ and !6₂)
    !7₂ = (!5₂ and !6₂)  →  max_length₄ = MUX(!7₂, max_length₃, max_length₂)
    max_length₃ = current_length₆  →  max_length₄ = MUX(!7₂, max_length₃, max_length₂)
Back edges:
    current_length₆ = MUX(s1₂, current_length₃, current_length₅)  →  current_length₂ = Φ(current_length₁, current_length₆)
    max_length₄ = MUX(!7₂, max_length₃, max_length₂)  →  max_length₂ = Φ(max_length₁, max_length₄)
    s2₃ = (Seq₀[i] == Syms₀[0])  →  s2₂ = Φ(s2₁, s2₃)
