def biometric_matching_fast(D: plaintext[int], N: plaintext[int], C: shared[list[int]], C_sqr_sum: shared[int], two_C: shared[list[int]], S: shared[list[int]], S_sqr_sum: shared[list[int]]):
    differences₁ = []
    for i in range(0, D₀):
        differences₂ = Φ(differences₁, differences₃)
        !1₂ = [0]
        !2₂ = (differences₂ + !1₂)
        differences₃ = Update(differences₂, i, !2₂)
    for i in range(0, N₀):
        differences₄ = Φ(differences₂, differences₅)
        min_diff₁ = Φ(min_diff₀, min_diff₃)
        min_index₁ = Φ(min_index₀, min_index₃)
        a_sqr_plus_b_sqr₂ = (S_sqr_sum₀[i] + C_sqr_sum₀)
        two_a_b₂ = 0
        for j in range(0, D₀):
            two_a_b₃ = Φ(two_a_b₂, two_a_b₄)
            tmp₃ = (S₀[((i * D₀) + j)] * two_C₀[j])
            two_a_b₄ = (two_a_b₃ + tmp₃)
        this_diff₂ = (a_sqr_plus_b_sqr₂ - two_a_b₃)
        differences₅ = Update(differences₄, i, this_diff₂)
        min_diff₂ = differences₅[0]
        min_index₂ = 0
        for k in range(0, N₀):
            min_diff₃ = Φ(min_diff₂, min_diff₅)
            min_index₃ = Φ(min_index₂, min_index₅)
            !3₃ = (differences₅[k] < min_diff₃)
            min_diff₄ = differences₅[k]
            min_index₄ = k
            min_diff₅ = MUX(!3₃, min_diff₄, min_diff₃)
            min_index₅ = MUX(!3₃, min_index₄, min_index₃)
    !4₁ = (min_diff₁, min_index₁)
    return !4₁
