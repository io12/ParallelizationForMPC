Nodes:
    !1!1 = [0]
    differences!1 = (!1!1 * D!0)
    differences!2 = Φ(differences!1, differences!3)
    min_diff!1 = Φ(min_diff!0, min_diff!3)
    min_index!1 = Φ(min_index!0, min_index!3)
    a_sqr_plus_b_sqr!2 = (S_sqr_sum!0[i] + C_sqr_sum!0)
    two_a_b!2 = 0
    two_a_b!3 = Φ(two_a_b!2, two_a_b!4)
    tmp!3 = (S!0[((i * D!0) + j)] * two_C!0[j])
    two_a_b!4 = (two_a_b!3 + tmp!3)
    this_diff!2 = (a_sqr_plus_b_sqr!2 - two_a_b!3)
    differences!3 = Update(differences!2, i, this_diff!2)
    min_diff!2 = differences!3[0]
    min_index!2 = 0
    min_diff!3 = Φ(min_diff!2, min_diff!5)
    min_index!3 = Φ(min_index!2, min_index!5)
    !2!3 = (differences!3[k] < min_diff!3)
    min_diff!4 = differences!3[k]
    min_index!4 = k
    min_diff!5 = MUX(!2!3, min_diff!4, min_diff!3)
    min_index!5 = MUX(!2!3, min_index!4, min_index!3)
    !3!1 = (min_diff!1, min_index!1)
Forward edges:
    !1!1 = [0]  →  differences!1 = (!1!1 * D!0)
    differences!1 = (!1!1 * D!0)  →  differences!2 = Φ(differences!1, differences!3)
    differences!2 = Φ(differences!1, differences!3)  →  differences!3 = Update(differences!2, i, this_diff!2)
    min_diff!1 = Φ(min_diff!0, min_diff!3)  →  !3!1 = (min_diff!1, min_index!1)
    min_index!1 = Φ(min_index!0, min_index!3)  →  !3!1 = (min_diff!1, min_index!1)
    a_sqr_plus_b_sqr!2 = (S_sqr_sum!0[i] + C_sqr_sum!0)  →  this_diff!2 = (a_sqr_plus_b_sqr!2 - two_a_b!3)
    two_a_b!2 = 0  →  two_a_b!3 = Φ(two_a_b!2, two_a_b!4)
    two_a_b!3 = Φ(two_a_b!2, two_a_b!4)  →  two_a_b!4 = (two_a_b!3 + tmp!3)
    two_a_b!3 = Φ(two_a_b!2, two_a_b!4)  →  this_diff!2 = (a_sqr_plus_b_sqr!2 - two_a_b!3)
    tmp!3 = (S!0[((i * D!0) + j)] * two_C!0[j])  →  two_a_b!4 = (two_a_b!3 + tmp!3)
    this_diff!2 = (a_sqr_plus_b_sqr!2 - two_a_b!3)  →  differences!3 = Update(differences!2, i, this_diff!2)
    differences!3 = Update(differences!2, i, this_diff!2)  →  min_diff!2 = differences!3[0]
    differences!3 = Update(differences!2, i, this_diff!2)  →  !2!3 = (differences!3[k] < min_diff!3)
    differences!3 = Update(differences!2, i, this_diff!2)  →  min_diff!4 = differences!3[k]
    min_diff!2 = differences!3[0]  →  min_diff!3 = Φ(min_diff!2, min_diff!5)
    min_index!2 = 0  →  min_index!3 = Φ(min_index!2, min_index!5)
    min_diff!3 = Φ(min_diff!2, min_diff!5)  →  !2!3 = (differences!3[k] < min_diff!3)
    min_diff!3 = Φ(min_diff!2, min_diff!5)  →  min_diff!5 = MUX(!2!3, min_diff!4, min_diff!3)
    min_index!3 = Φ(min_index!2, min_index!5)  →  min_index!5 = MUX(!2!3, min_index!4, min_index!3)
    !2!3 = (differences!3[k] < min_diff!3)  →  min_diff!5 = MUX(!2!3, min_diff!4, min_diff!3)
    !2!3 = (differences!3[k] < min_diff!3)  →  min_index!5 = MUX(!2!3, min_index!4, min_index!3)
    min_diff!4 = differences!3[k]  →  min_diff!5 = MUX(!2!3, min_diff!4, min_diff!3)
    min_index!4 = k  →  min_index!5 = MUX(!2!3, min_index!4, min_index!3)
Back edges:
    two_a_b!4 = (two_a_b!3 + tmp!3)  →  two_a_b!3 = Φ(two_a_b!2, two_a_b!4)
    differences!3 = Update(differences!2, i, this_diff!2)  →  differences!2 = Φ(differences!1, differences!3)
    min_diff!3 = Φ(min_diff!2, min_diff!5)  →  min_diff!1 = Φ(min_diff!0, min_diff!3)
    min_index!3 = Φ(min_index!2, min_index!5)  →  min_index!1 = Φ(min_index!0, min_index!3)
    min_diff!5 = MUX(!2!3, min_diff!4, min_diff!3)  →  min_diff!3 = Φ(min_diff!2, min_diff!5)
    min_index!5 = MUX(!2!3, min_index!4, min_index!3)  →  min_index!3 = Φ(min_index!2, min_index!5)
