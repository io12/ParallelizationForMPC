Nodes:
    differences₁ = []
    differences₂ = Φ(differences₁, differences₃)
    !1₂ = [0]
    !2₂ = (differences₂ + !1₂)
    differences₃ = Update(differences₂, i, !2₂)
    differences₄ = Φ(differences₂, differences₅)
    min_diff₁ = Φ(min_diff₀, min_diff₃)
    min_index₁ = Φ(min_index₀, min_index₃)
    a_sqr_plus_b_sqr₂ = (S_sqr_sum₀[i] + C_sqr_sum₀)
    two_a_b₂ = 0
    two_a_b₃ = Φ(two_a_b₂, two_a_b₄)
    tmp₃ = (S₀[((i * D₀) + j)] * two_C₀[j])
    two_a_b₄ = (two_a_b₃ + tmp₃)
    this_diff₂ = (a_sqr_plus_b_sqr₂ - two_a_b₃)
    differences₅ = Update(differences₄, i, this_diff₂)
    min_diff₂ = differences₅[0]
    min_index₂ = 0
    min_diff₃ = Φ(min_diff₂, min_diff₅)
    min_index₃ = Φ(min_index₂, min_index₅)
    !3₃ = (differences₅[k] < min_diff₃)
    min_diff₄ = differences₅[k]
    min_index₄ = k
    min_diff₅ = MUX(!3₃, min_diff₄, min_diff₃)
    min_index₅ = MUX(!3₃, min_index₄, min_index₃)
    !4₁ = (min_diff₁, min_index₁)
Forward edges:
    differences₁ = []  →  differences₂ = Φ(differences₁, differences₃)
    differences₂ = Φ(differences₁, differences₃)  →  !2₂ = (differences₂ + !1₂)
    differences₂ = Φ(differences₁, differences₃)  →  differences₃ = Update(differences₂, i, !2₂)
    differences₂ = Φ(differences₁, differences₃)  →  differences₄ = Φ(differences₂, differences₅)
    !1₂ = [0]  →  !2₂ = (differences₂ + !1₂)
    !2₂ = (differences₂ + !1₂)  →  differences₃ = Update(differences₂, i, !2₂)
    differences₄ = Φ(differences₂, differences₅)  →  differences₅ = Update(differences₄, i, this_diff₂)
    min_diff₁ = Φ(min_diff₀, min_diff₃)  →  !4₁ = (min_diff₁, min_index₁)
    min_index₁ = Φ(min_index₀, min_index₃)  →  !4₁ = (min_diff₁, min_index₁)
    a_sqr_plus_b_sqr₂ = (S_sqr_sum₀[i] + C_sqr_sum₀)  →  this_diff₂ = (a_sqr_plus_b_sqr₂ - two_a_b₃)
    two_a_b₂ = 0  →  two_a_b₃ = Φ(two_a_b₂, two_a_b₄)
    two_a_b₃ = Φ(two_a_b₂, two_a_b₄)  →  two_a_b₄ = (two_a_b₃ + tmp₃)
    two_a_b₃ = Φ(two_a_b₂, two_a_b₄)  →  this_diff₂ = (a_sqr_plus_b_sqr₂ - two_a_b₃)
    tmp₃ = (S₀[((i * D₀) + j)] * two_C₀[j])  →  two_a_b₄ = (two_a_b₃ + tmp₃)
    this_diff₂ = (a_sqr_plus_b_sqr₂ - two_a_b₃)  →  differences₅ = Update(differences₄, i, this_diff₂)
    differences₅ = Update(differences₄, i, this_diff₂)  →  min_diff₂ = differences₅[0]
    differences₅ = Update(differences₄, i, this_diff₂)  →  !3₃ = (differences₅[k] < min_diff₃)
    differences₅ = Update(differences₄, i, this_diff₂)  →  min_diff₄ = differences₅[k]
    min_diff₂ = differences₅[0]  →  min_diff₃ = Φ(min_diff₂, min_diff₅)
    min_index₂ = 0  →  min_index₃ = Φ(min_index₂, min_index₅)
    min_diff₃ = Φ(min_diff₂, min_diff₅)  →  !3₃ = (differences₅[k] < min_diff₃)
    min_diff₃ = Φ(min_diff₂, min_diff₅)  →  min_diff₅ = MUX(!3₃, min_diff₄, min_diff₃)
    min_index₃ = Φ(min_index₂, min_index₅)  →  min_index₅ = MUX(!3₃, min_index₄, min_index₃)
    !3₃ = (differences₅[k] < min_diff₃)  →  min_diff₅ = MUX(!3₃, min_diff₄, min_diff₃)
    !3₃ = (differences₅[k] < min_diff₃)  →  min_index₅ = MUX(!3₃, min_index₄, min_index₃)
    min_diff₄ = differences₅[k]  →  min_diff₅ = MUX(!3₃, min_diff₄, min_diff₃)
    min_index₄ = k  →  min_index₅ = MUX(!3₃, min_index₄, min_index₃)
Back edges:
    two_a_b₄ = (two_a_b₃ + tmp₃)  →  two_a_b₃ = Φ(two_a_b₂, two_a_b₄)
    differences₅ = Update(differences₄, i, this_diff₂)  →  differences₄ = Φ(differences₂, differences₅)
    min_diff₃ = Φ(min_diff₂, min_diff₅)  →  min_diff₁ = Φ(min_diff₀, min_diff₃)
    min_index₃ = Φ(min_index₂, min_index₅)  →  min_index₁ = Φ(min_index₀, min_index₃)
    min_diff₅ = MUX(!3₃, min_diff₄, min_diff₃)  →  min_diff₃ = Φ(min_diff₂, min_diff₅)
    min_index₅ = MUX(!3₃, min_index₄, min_index₃)  →  min_index₃ = Φ(min_index₂, min_index₅)
