Function(X_coords, Y_coords, N):
Entry block: 0
Exit block: 3
Block 0:
    min_X!1 = []
    min_Y!1 = []
    jump
Block 1:
    min_X!2 = Φ(min_X!1, min_X!4)
    min_Y!2 = Φ(min_Y!1, min_Y!4)
    for i in range(0, N!0)
Block 2:
    bx!2 = False
    jump
Block 3:
    !13!1 = (min_X!2, min_Y!2)
    return !13!1
Block 4:
    bx!3 = Φ(bx!2, bx!4)
    for j in range(0, N!0)
Block 5:
    !3!3 = (X_coords!0[j] < X_coords!0[i])
    !4!3 = (Y_coords!0[j] < Y_coords!0[i])
    !5!3 = (!3!3 and !4!3)
    bx!4 = (bx!3 or !5!3)
    jump
Block 6:
    !6!2 = not bx!3
    conditional jump !6!2
Block 7:
    !8!2 = X_coords!0[i]
    !9!2 = [!8!2]
    min_X!3 = (min_X!2 + !9!2)
    !11!2 = Y_coords!0[i]
    !12!2 = [!11!2]
    min_Y!3 = (min_Y!2 + !12!2)
    jump
Block 8:
    jump
Block 9:
    (merge from conditional jump !6!2)
    min_X!4 = MUX(!6!2, min_X!3, min_X!2)
    min_Y!4 = MUX(!6!2, min_Y!3, min_Y!2)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 8, F) (6, 7, T) (7, 9, *) (8, 9, *) (9, 1, *)
