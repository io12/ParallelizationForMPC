Function minimal_points(X_coords: shared[list[int]], Y_coords: shared[list[int]], N: plaintext[int]):
Entry block: 0
Exit block: 3
Block 0:
    min_X₁ = []
    min_Y₁ = []
    jump
Block 1:
    min_X₂ = Φ(min_X₁, min_X₄)
    min_Y₂ = Φ(min_Y₁, min_Y₄)
    bx₁ = Φ(bx₀, bx₃)
    !1₁ = Φ(!1₀, !1₂)
    !2₁ = Φ(!2₀, !2₂)
    !3₁ = Φ(!3₀, !3₂)
    !4₁ = Φ(!4₀, !4₂)
    !5₁ = Φ(!5₀, !5₂)
    !6₁ = Φ(!6₀, !6₂)
    !7₁ = Φ(!7₀, !7₃)
    !8₁ = Φ(!8₀, !8₃)
    !9₁ = Φ(!9₀, !9₃)
    !10₁ = Φ(!10₀, !10₃)
    !11₁ = Φ(!11₀, !11₃)
    !12₁ = Φ(!12₀, !12₃)
    for i: plaintext[int] in range(0, N₀)
Block 2:
    bx₂ = False
    jump
Block 3:
    !13₁ = (min_X₂, min_Y₂)
    return !13₁
Block 4:
    bx₃ = Φ(bx₂, bx₄)
    !1₂ = Φ(!1₁, !1₃)
    !2₂ = Φ(!2₁, !2₃)
    !3₂ = Φ(!3₁, !3₃)
    !4₂ = Φ(!4₁, !4₃)
    !5₂ = Φ(!5₁, !5₃)
    for j: plaintext[int] in range(0, N₀)
Block 5:
    !1₃ = (X_coords₀[j] < X_coords₀[i])
    !2₃ = (Y_coords₀[j] < Y_coords₀[i])
    !3₃ = (X_coords₀[j] < X_coords₀[i])
    !4₃ = (Y_coords₀[j] < Y_coords₀[i])
    !5₃ = (!3₃ and !4₃)
    bx₄ = (bx₃ or !5₃)
    jump
Block 6:
    !6₂ = not bx₃
    conditional jump !6₂
Block 7:
    !7₂ = X_coords₀[i]
    !8₂ = X_coords₀[i]
    !9₂ = [!8₂]
    min_X₃ = (min_X₂ + !9₂)
    !10₂ = Y_coords₀[i]
    !11₂ = Y_coords₀[i]
    !12₂ = [!11₂]
    min_Y₃ = (min_Y₂ + !12₂)
    jump
Block 8:
    jump
Block 9:
    (merge from conditional jump !6₂)
    min_X₄ = MUX(!6₂, min_X₃, min_X₂)
    min_Y₄ = MUX(!6₂, min_Y₃, min_Y₂)
    !7₃ = MUX(!6₂, !7₂, !7₁)
    !8₃ = MUX(!6₂, !8₂, !8₁)
    !9₃ = MUX(!6₂, !9₂, !9₁)
    !10₃ = MUX(!6₂, !10₂, !10₁)
    !11₃ = MUX(!6₂, !11₂, !11₁)
    !12₃ = MUX(!6₂, !12₂, !12₁)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 8, F) (6, 7, T) (7, 9, *) (8, 9, *) (9, 1, *)
