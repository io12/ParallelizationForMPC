Function minimal_points(X_coords: shared[list[unsigned int]], Y_coords: shared[list[unsigned int]], N: plaintext[unsigned int]):
Entry block: 0
Exit block: 3
Block 0:
    min_X!1 = []
    min_Y!1 = []
    jump
Block 1:
    min_X!2 = Φ(min_X!1, min_X!4)
    min_Y!2 = Φ(min_Y!1, min_Y!4)
    bx!1 = Φ(bx!0, bx!3)
    !1!1 = Φ(!1!0, !1!2)
    !2!1 = Φ(!2!0, !2!2)
    !3!1 = Φ(!3!0, !3!2)
    !4!1 = Φ(!4!0, !4!2)
    !5!1 = Φ(!5!0, !5!2)
    !6!1 = Φ(!6!0, !6!2)
    !7!1 = Φ(!7!0, !7!3)
    !8!1 = Φ(!8!0, !8!3)
    !9!1 = Φ(!9!0, !9!3)
    !10!1 = Φ(!10!0, !10!3)
    !11!1 = Φ(!11!0, !11!3)
    !12!1 = Φ(!12!0, !12!3)
    for i: plaintext[int] in range(0, N!0)
Block 2:
    bx!2 = False
    jump
Block 3:
    !13!1 = (min_X!2, min_Y!2)
    return !13!1
Block 4:
    bx!3 = Φ(bx!2, bx!4)
    !1!2 = Φ(!1!1, !1!3)
    !2!2 = Φ(!2!1, !2!3)
    !3!2 = Φ(!3!1, !3!3)
    !4!2 = Φ(!4!1, !4!3)
    !5!2 = Φ(!5!1, !5!3)
    for j: plaintext[int] in range(0, N!0)
Block 5:
    !1!3 = (X_coords!0[j] < X_coords!0[i])
    !2!3 = (Y_coords!0[j] < Y_coords!0[i])
    !3!3 = (X_coords!0[j] < X_coords!0[i])
    !4!3 = (Y_coords!0[j] < Y_coords!0[i])
    !5!3 = (!3!3 and !4!3)
    bx!4 = (bx!3 or !5!3)
    jump
Block 6:
    !6!2 = not bx!3
    conditional jump !6!2
Block 7:
    !7!2 = X_coords!0[i]
    !8!2 = X_coords!0[i]
    !9!2 = [!8!2]
    min_X!3 = (min_X!2 + !9!2)
    !10!2 = Y_coords!0[i]
    !11!2 = Y_coords!0[i]
    !12!2 = [!11!2]
    min_Y!3 = (min_Y!2 + !12!2)
    jump
Block 8:
    jump
Block 9:
    min_X!4 = Φ(min_X!3, min_X!2)
    min_Y!4 = Φ(min_Y!3, min_Y!2)
    !7!3 = Φ(!7!2, !7!1)
    !8!3 = Φ(!8!2, !8!1)
    !9!3 = Φ(!9!2, !9!1)
    !10!3 = Φ(!10!2, !10!1)
    !11!3 = Φ(!11!2, !11!1)
    !12!3 = Φ(!12!2, !12!1)
    (merge from conditional jump !6!2)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 8, F) (6, 7, T) (7, 9, *) (8, 9, *) (9, 1, *)
