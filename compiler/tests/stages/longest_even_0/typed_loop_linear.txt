def longest_even_0(Seq: shared[list[int]], N: plaintext[int], Sym: shared[int]):
    current_length!1: plaintext[int] = 0
    max_length!1: plaintext[int] = 0
    for i: plaintext[int] in range(1, N!0):
        current_length!2: shared[int] = Φ(current_length!1, current_length!5)
        max_length!2: shared[int] = Φ(max_length!1, max_length!4)
        !1!2: shared[int] = (Seq!0[i] == Sym!0)
        current_length!4: plaintext[int] = 0
        current_length!3: shared[int] = (current_length!2 + 1)
        current_length!5: shared[int] = MUX(!1!2, current_length!3, current_length!4)
        tmp_max_len!2: shared[int] = max_length!2
        !2!2: shared[int] = (current_length!5 > max_length!2)
        tmp_max_len!3: shared[int] = current_length!5
        tmp_max_len!4: shared[int] = MUX(!2!2, tmp_max_len!3, tmp_max_len!2)
        !3!2: shared[int] = (tmp_max_len!4 % 2)
        !4!2: shared[int] = (!3!2 == 0)
        max_length!3: shared[int] = tmp_max_len!4
        max_length!4: shared[int] = MUX(!4!2, max_length!3, max_length!2)
    return max_length!2
