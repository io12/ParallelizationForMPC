Function longest_even_0(Seq: shared[list[int]], N: plaintext[int], Sym: shared[int]):
Entry block: 0
Exit block: 3
Block 0:
    current_length₁ = 0
    max_length₁ = 0
    jump
Block 1:
    current_length₂ = Φ(current_length₁, current_length₅)
    max_length₂ = Φ(max_length₁, max_length₄)
    for i: plaintext[int] in range(1, N₀)
Block 2:
    !1₂ = (Seq₀[i] == Sym₀)
    conditional jump !1₂
Block 3:
    return max_length₂
Block 4:
    current_length₃ = (current_length₂ + 1)
    jump
Block 5:
    current_length₄ = 0
    jump
Block 6:
    (merge from conditional jump !1₂)
    current_length₅ = MUX(!1₂, current_length₃, current_length₄)
    tmp_max_len₂ = max_length₂
    !2₂ = (current_length₅ > max_length₂)
    conditional jump !2₂
Block 7:
    tmp_max_len₃ = current_length₅
    jump
Block 8:
    jump
Block 9:
    (merge from conditional jump !2₂)
    tmp_max_len₄ = MUX(!2₂, tmp_max_len₃, tmp_max_len₂)
    !3₂ = (tmp_max_len₄ % 2)
    !4₂ = (!3₂ == 0)
    conditional jump !4₂
Block 10:
    max_length₃ = tmp_max_len₄
    jump
Block 11:
    jump
Block 12:
    (merge from conditional jump !4₂)
    max_length₄ = MUX(!4₂, max_length₃, max_length₂)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 5, F) (2, 4, T) (4, 6, *) (5, 6, *) (6, 8, F) (6, 7, T) (7, 9, *) (8, 9, *) (9, 11, F) (9, 10, T) (10, 12, *) (11, 12, *) (12, 1, *)
