Function(A, SA, B, SB):
Entry block: 0
Exit block: 2
Block 0:
    !1 = []
    result = !1
    i = 0
    !2 = SA
    jump
Block 1:
    !3 = i < !2
    conditional jump !3
Block 2:
    return result
Block 3:
    j = 0
    !4 = SB
    jump
Block 4:
    !5 = j < !4
    conditional jump !5
Block 5:
    !13 = 1
    i = i + !13
    jump
Block 6:
    !6 = A[i]
    !7 = B[j]
    !8 = !6 == !7
    conditional jump !8
Block 7:
    jump
Block 8:
    !9 = A[i]
    !10 = [!9]
    !11 = result + !10
    result = !11
    jump
Block 9:
    (merge from condition: conditional jump !8)
    !12 = 1
    j = j + !12
    jump
Edges: (0, 1, BranchKind.UNCONDITIONAL) (1, 2, BranchKind.FALSE) (1, 3, BranchKind.TRUE) (3, 4, BranchKind.UNCONDITIONAL) (4, 5, BranchKind.FALSE) (4, 6, BranchKind.TRUE) (5, 1, BranchKind.UNCONDITIONAL) (6, 7, BranchKind.FALSE) (6, 8, BranchKind.TRUE) (7, 9, BranchKind.UNCONDITIONAL) (8, 9, BranchKind.UNCONDITIONAL) (9, 4, BranchKind.UNCONDITIONAL)
