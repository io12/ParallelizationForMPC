Function(A, SA, B, SB):
Entry block: 0
Exit block: 3
Block 0:
    !1!1 = []
    result!1 = !1!1
    i!1 = 0
    !2!1 = SA!0
    jump
Block 1:
    result!2 = Φ(result!1, result!3)
    i!2 = Φ(i!1, i!3)
    !3!1 = Φ(!3!0, !3!2)
    j!1 = Φ(j!0, j!3)
    !4!1 = Φ(!4!0, !4!2)
    !5!1 = Φ(!5!0, !5!3)
    !6!1 = Φ(!6!0, !6!2)
    !7!1 = Φ(!7!0, !7!2)
    !8!1 = Φ(!8!0, !8!2)
    !13!1 = Φ(!13!0, !13!2)
    !9!1 = Φ(!9!0, !9!2)
    !10!1 = Φ(!10!0, !10!2)
    !11!1 = Φ(!11!0, !11!2)
    !12!1 = Φ(!12!0, !12!2)
    !3!2 = i!2 < !2!1
    conditional jump !3!2
Block 2:
    j!2 = 0
    !4!2 = SB!0
    jump
Block 3:
    return result!2
Block 4:
    result!3 = Φ(result!2, result!5)
    j!3 = Φ(j!2, j!4)
    !5!2 = Φ(!5!1, !5!3)
    !6!2 = Φ(!6!1, !6!3)
    !7!2 = Φ(!7!1, !7!3)
    !8!2 = Φ(!8!1, !8!3)
    !9!2 = Φ(!9!1, !9!4)
    !10!2 = Φ(!10!1, !10!4)
    !11!2 = Φ(!11!1, !11!4)
    !12!2 = Φ(!12!1, !12!3)
    !5!3 = j!3 < !4!2
    conditional jump !5!3
Block 5:
    !6!3 = A[i]
    !7!3 = B[j]
    !8!3 = !6!3 == !7!3
    conditional jump !8!3
Block 6:
    !13!2 = 1
    i!3 = i!2 + !13!2
    jump
Block 7:
    !9!3 = A[i]
    !10!3 = [!9!3]
    !11!3 = result!3 + !10!3
    result!4 = !11!3
    jump
Block 8:
    jump
Block 9:
    result!5 = Φ(result!4, result!3)
    !9!4 = Φ(!9!3, !9!2)
    !10!4 = Φ(!10!3, !10!2)
    !11!4 = Φ(!11!3, !11!2)
    (merge from conditional jump !8!3)
    !12!3 = 1
    j!4 = j!3 + !12!3
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 8, F) (5, 7, T) (6, 1, *) (7, 9, *) (8, 9, *) (9, 4, *)
