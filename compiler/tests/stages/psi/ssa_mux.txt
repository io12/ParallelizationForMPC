Function psi(A: shared, SA: plaintext, B: shared, SB: plaintext):
Entry block: 0
Exit block: 3
Block 0:
    dummy!1 = 0
    result!1 = []
    jump
Block 1:
    result!2 = Φ(result!1, result!3)
    flag!1 = Φ(flag!0, flag!3)
    !1!1 = Φ(!1!0, !1!2)
    val!1 = Φ(val!0, val!4)
    !2!1 = Φ(!2!0, !2!2)
    for i: plaintext in range(0, SA!0)
Block 2:
    flag!2 = False
    jump
Block 3:
    return result!2
Block 4:
    flag!3 = Φ(flag!2, flag!5)
    !1!2 = Φ(!1!1, !1!3)
    for j: plaintext in range(0, SB!0)
Block 5:
    !1!3 = (A!0[i] == B!0[j])
    conditional jump !1!3
Block 6:
    val!2 = dummy!1
    conditional jump flag!3
Block 7:
    flag!4 = True
    jump
Block 8:
    jump
Block 9:
    (merge from conditional jump !1!3)
    flag!5 = MUX(!1!3, flag!4, flag!3)
    jump
Block 10:
    val!3 = A!0[i]
    jump
Block 11:
    jump
Block 12:
    (merge from conditional jump flag!3)
    val!4 = MUX(flag!3, val!3, val!2)
    !2!2 = [val!4]
    result!3 = (result!2 + !2!2)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 8, F) (5, 7, T) (6, 11, F) (6, 10, T) (7, 9, *) (8, 9, *) (9, 4, *) (10, 12, *) (11, 12, *) (12, 1, *)
