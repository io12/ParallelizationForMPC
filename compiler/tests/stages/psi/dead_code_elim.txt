Function psi(A: shared[list[int]], SA: plaintext[int], B: shared[list[int]], SB: plaintext[int]):
Entry block: 0
Exit block: 3
Block 0:
    dummy₁ = 0
    result₁ = []
    jump
Block 1:
    result₂ = Φ(result₁, result₃)
    for i: plaintext[int] in range(0, SA₀)
Block 2:
    flag₂ = False
    jump
Block 3:
    return result₂
Block 4:
    flag₃ = Φ(flag₂, flag₅)
    for j: plaintext[int] in range(0, SB₀)
Block 5:
    !1₃ = (A₀[i] == B₀[j])
    conditional jump !1₃
Block 6:
    val₂ = dummy₁
    conditional jump flag₃
Block 7:
    flag₄ = True
    jump
Block 8:
    jump
Block 9:
    (merge from conditional jump !1₃)
    flag₅ = MUX(!1₃, flag₄, flag₃)
    jump
Block 10:
    val₃ = A₀[i]
    jump
Block 11:
    jump
Block 12:
    (merge from conditional jump flag₃)
    val₄ = MUX(flag₃, val₃, val₂)
    !2₂ = [val₄]
    result₃ = (result₂ + !2₂)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 8, F) (5, 7, T) (6, 11, F) (6, 10, T) (7, 9, *) (8, 9, *) (9, 4, *) (10, 12, *) (11, 12, *) (12, 1, *)
