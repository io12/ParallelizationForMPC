Nodes:
    parameter Seq!0
    parameter N!0
    parameter Sym!0
    max_sum!1 = 0
    current_sum!1 = 0
    !4!0 = lift(max_sum!1, (i!1:N!0))
    !5!0 = lift(current_sum!1, (i!1:N!0))
    !6!0 = lift(Seq!0[i!1], (i!1:N!0))
    !7!0 = lift(Sym!0, (i!1:N!0))
    !8!0 = lift(Seq!0[i!1], (i!1:N!0))
    for i!1 in range(0, N!0):
    max_sum!2 = Φ(!4!0, max_sum!4)
    current_sum!2 = Φ(!5!0, current_sum!5)
    !1!2 = (!6!0 == !7!0)
    !2!2 = not !1!2
    current_sum!4 = 0
    current_sum!3 = (current_sum!2 + !8!0)
    current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)
    !3!2 = (current_sum!5 > max_sum!2)
    max_sum!3 = current_sum!5
    max_sum!4 = MUX(!3!2, max_sum!3, max_sum!2)
    max_sum!2 = Φ(!4!0, max_sum!4)
    current_sum!2 = Φ(!5!0, current_sum!5)
    !1!2 = (!6!0 == !7!0)
    !2!2 = not !1!2
    current_sum!4 = 0
    current_sum!3 = (current_sum!2 + !8!0)
    current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)
    !3!2 = (current_sum!5 > max_sum!2)
    max_sum!3 = current_sum!5
    max_sum!4 = MUX(!3!2, max_sum!3, max_sum!2)
Forward edges:
    parameter Seq!0  →  !6!0 = lift(Seq!0[i!1], (i!1:N!0))
    parameter Seq!0  →  !8!0 = lift(Seq!0[i!1], (i!1:N!0))
    parameter Sym!0  →  !7!0 = lift(Sym!0, (i!1:N!0))
    max_sum!1 = 0  →  !4!0 = lift(max_sum!1, (i!1:N!0))
    current_sum!1 = 0  →  !5!0 = lift(current_sum!1, (i!1:N!0))
    !4!0 = lift(max_sum!1, (i!1:N!0))  →  max_sum!2 = Φ(!4!0, max_sum!4)
    !5!0 = lift(current_sum!1, (i!1:N!0))  →  current_sum!2 = Φ(!5!0, current_sum!5)
    !6!0 = lift(Seq!0[i!1], (i!1:N!0))  →  !1!2 = (!6!0 == !7!0)
    !7!0 = lift(Sym!0, (i!1:N!0))  →  !1!2 = (!6!0 == !7!0)
    !8!0 = lift(Seq!0[i!1], (i!1:N!0))  →  current_sum!3 = (current_sum!2 + !8!0)
    for i!1 in range(0, N!0):
    max_sum!2 = Φ(!4!0, max_sum!4)
    current_sum!2 = Φ(!5!0, current_sum!5)
    !1!2 = (!6!0 == !7!0)
    !2!2 = not !1!2
    current_sum!4 = 0
    current_sum!3 = (current_sum!2 + !8!0)
    current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)
    !3!2 = (current_sum!5 > max_sum!2)
    max_sum!3 = current_sum!5
    max_sum!4 = MUX(!3!2, max_sum!3, max_sum!2)  →  !6!0 = lift(Seq!0[i!1], (i!1:N!0))
    for i!1 in range(0, N!0):
    max_sum!2 = Φ(!4!0, max_sum!4)
    current_sum!2 = Φ(!5!0, current_sum!5)
    !1!2 = (!6!0 == !7!0)
    !2!2 = not !1!2
    current_sum!4 = 0
    current_sum!3 = (current_sum!2 + !8!0)
    current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)
    !3!2 = (current_sum!5 > max_sum!2)
    max_sum!3 = current_sum!5
    max_sum!4 = MUX(!3!2, max_sum!3, max_sum!2)  →  !8!0 = lift(Seq!0[i!1], (i!1:N!0))
    max_sum!2 = Φ(!4!0, max_sum!4)  →  !3!2 = (current_sum!5 > max_sum!2)
    max_sum!2 = Φ(!4!0, max_sum!4)  →  max_sum!4 = MUX(!3!2, max_sum!3, max_sum!2)
    current_sum!2 = Φ(!5!0, current_sum!5)  →  current_sum!3 = (current_sum!2 + !8!0)
    !1!2 = (!6!0 == !7!0)  →  !2!2 = not !1!2
    !2!2 = not !1!2  →  current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)
    current_sum!4 = 0  →  current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)
    current_sum!3 = (current_sum!2 + !8!0)  →  current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)
    current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)  →  !3!2 = (current_sum!5 > max_sum!2)
    current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)  →  max_sum!3 = current_sum!5
    !3!2 = (current_sum!5 > max_sum!2)  →  max_sum!4 = MUX(!3!2, max_sum!3, max_sum!2)
    max_sum!3 = current_sum!5  →  max_sum!4 = MUX(!3!2, max_sum!3, max_sum!2)
Back edges:
    current_sum!5 = MUX(!2!2, current_sum!3, current_sum!4)  →  current_sum!2 = Φ(!5!0, current_sum!5)
    max_sum!4 = MUX(!3!2, max_sum!3, max_sum!2)  →  max_sum!2 = Φ(!4!0, max_sum!4)
