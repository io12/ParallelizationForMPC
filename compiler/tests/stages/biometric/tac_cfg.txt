Function(C, D, S, N):
Entry block: 0
Exit block: 3
Block 0:
    !1 = 10000
    min_sum = !1
    !2 = 1
    !3 = - !2
    min_index = !3
    jump
Block 1:
    for i in range(0, N)
Block 2:
    !4 = 0
    sum = !4
    jump
Block 3:
    !13 = [min_sum, min_index]
    return !13
Block 4:
    for j in range(0, D)
Block 5:
    !5 = i * D
    !6 = !5 + j
    !7 = S[!6]
    !8 = C[j]
    !9 = !7 - !8
    d = !9
    !10 = d * d
    p = !10
    !11 = sum + p
    sum = !11
    jump
Block 6:
    !12 = sum < min_sum
    conditional jump !12
Block 7:
    min_sum = sum
    min_index = i
    jump
Block 8:
    jump
Block 9:
    (merge from conditional jump !12)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 8, F) (6, 7, T) (7, 9, *) (8, 9, *) (9, 1, *)
