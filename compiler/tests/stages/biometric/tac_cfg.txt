Function(C, D, S, N):
Entry block: 0
Exit block: 3
Block 0:
    min_sum = 10000
    min_index = - 1
    jump
Block 1:
    for i in range(0, N)
Block 2:
    sum = 0
    jump
Block 3:
    !4 = (min_sum, min_index)
    return !4
Block 4:
    for j in range(0, D)
Block 5:
    !1 = S[((i * D) + j)]
    !2 = C[j]
    d = (!1 - !2)
    p = (d * d)
    sum = (sum + p)
    jump
Block 6:
    !3 = (sum < min_sum)
    conditional jump !3
Block 7:
    min_sum = sum
    min_index = i
    jump
Block 8:
    jump
Block 9:
    (merge from conditional jump !3)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 8, F) (6, 7, T) (7, 9, *) (8, 9, *) (9, 1, *)
