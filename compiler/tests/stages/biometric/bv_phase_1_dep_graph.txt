Nodes:
    parameter C!0
    parameter D!0
    parameter S!0
    parameter N!0
    min_sum!1 = 10000
    min_index!1 = 0
    !3!0 = lift(min_sum!1, (i!1:N!0))
    !4!0 = lift(min_index!1, (i!1:N!0))
    for i!1 in range(0, N!0):
    min_sum!2 = Φ(!3!0, min_sum!4)
    min_index!2 = Φ(!4!0, min_index!4)
    sum!2 = 0
    !5!0 = lift(sum!2, (i!1:N!0, j!1:D!0))
    !6!0 = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0))
    !7!0 = lift(C!0[j!1], (i!1:N!0, j!1:D!0))
    for j!1 in range(0, D!0):
        sum!3 = Φ(!5!0, sum!4)
        d!3 = (!6!0 - !7!0)
        p!3 = (d!3 * d!3)
        sum!4 = (sum!3 + p!3)
    !8!0 = drop_dim(sum!3)
    !1!2 = (!8!0 < min_sum!2)
    !9!0 = drop_dim(sum!3)
    min_sum!3 = !9!0
    min_index!3 = i!1
    min_sum!4 = MUX(!1!2, min_sum!3, min_sum!2)
    min_index!4 = MUX(!1!2, min_index!3, min_index!2)
    min_sum!2 = Φ(!3!0, min_sum!4)
    min_index!2 = Φ(!4!0, min_index!4)
    sum!2 = 0
    !5!0 = lift(sum!2, (i!1:N!0, j!1:D!0))
    !6!0 = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0))
    !7!0 = lift(C!0[j!1], (i!1:N!0, j!1:D!0))
    for j!1 in range(0, D!0):
    sum!3 = Φ(!5!0, sum!4)
    d!3 = (!6!0 - !7!0)
    p!3 = (d!3 * d!3)
    sum!4 = (sum!3 + p!3)
    sum!3 = Φ(!5!0, sum!4)
    d!3 = (!6!0 - !7!0)
    p!3 = (d!3 * d!3)
    sum!4 = (sum!3 + p!3)
    !8!0 = drop_dim(sum!3)
    !1!2 = (!8!0 < min_sum!2)
    !9!0 = drop_dim(sum!3)
    min_sum!3 = !9!0
    min_index!3 = i!1
    min_sum!4 = MUX(!1!2, min_sum!3, min_sum!2)
    min_index!4 = MUX(!1!2, min_index!3, min_index!2)
    !10!0 = drop_dim(min_sum!2)
    !11!0 = drop_dim(min_index!2)
    !2!1 = (!10!0, !11!0)
Forward edges:
    parameter C!0  →  !7!0 = lift(C!0[j!1], (i!1:N!0, j!1:D!0))
    parameter D!0  →  !6!0 = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0))
    parameter S!0  →  !6!0 = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0))
    min_sum!1 = 10000  →  !3!0 = lift(min_sum!1, (i!1:N!0))
    min_index!1 = 0  →  !4!0 = lift(min_index!1, (i!1:N!0))
    !3!0 = lift(min_sum!1, (i!1:N!0))  →  min_sum!2 = Φ(!3!0, min_sum!4)
    !4!0 = lift(min_index!1, (i!1:N!0))  →  min_index!2 = Φ(!4!0, min_index!4)
    for i!1 in range(0, N!0):
    min_sum!2 = Φ(!3!0, min_sum!4)
    min_index!2 = Φ(!4!0, min_index!4)
    sum!2 = 0
    !5!0 = lift(sum!2, (i!1:N!0, j!1:D!0))
    !6!0 = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0))
    !7!0 = lift(C!0[j!1], (i!1:N!0, j!1:D!0))
    for j!1 in range(0, D!0):
        sum!3 = Φ(!5!0, sum!4)
        d!3 = (!6!0 - !7!0)
        p!3 = (d!3 * d!3)
        sum!4 = (sum!3 + p!3)
    !8!0 = drop_dim(sum!3)
    !1!2 = (!8!0 < min_sum!2)
    !9!0 = drop_dim(sum!3)
    min_sum!3 = !9!0
    min_index!3 = i!1
    min_sum!4 = MUX(!1!2, min_sum!3, min_sum!2)
    min_index!4 = MUX(!1!2, min_index!3, min_index!2)  →  !6!0 = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0))
    for i!1 in range(0, N!0):
    min_sum!2 = Φ(!3!0, min_sum!4)
    min_index!2 = Φ(!4!0, min_index!4)
    sum!2 = 0
    !5!0 = lift(sum!2, (i!1:N!0, j!1:D!0))
    !6!0 = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0))
    !7!0 = lift(C!0[j!1], (i!1:N!0, j!1:D!0))
    for j!1 in range(0, D!0):
        sum!3 = Φ(!5!0, sum!4)
        d!3 = (!6!0 - !7!0)
        p!3 = (d!3 * d!3)
        sum!4 = (sum!3 + p!3)
    !8!0 = drop_dim(sum!3)
    !1!2 = (!8!0 < min_sum!2)
    !9!0 = drop_dim(sum!3)
    min_sum!3 = !9!0
    min_index!3 = i!1
    min_sum!4 = MUX(!1!2, min_sum!3, min_sum!2)
    min_index!4 = MUX(!1!2, min_index!3, min_index!2)  →  min_index!3 = i!1
    min_sum!2 = Φ(!3!0, min_sum!4)  →  !1!2 = (!8!0 < min_sum!2)
    min_sum!2 = Φ(!3!0, min_sum!4)  →  min_sum!4 = MUX(!1!2, min_sum!3, min_sum!2)
    min_sum!2 = Φ(!3!0, min_sum!4)  →  !10!0 = drop_dim(min_sum!2)
    min_index!2 = Φ(!4!0, min_index!4)  →  min_index!4 = MUX(!1!2, min_index!3, min_index!2)
    min_index!2 = Φ(!4!0, min_index!4)  →  !11!0 = drop_dim(min_index!2)
    sum!2 = 0  →  !5!0 = lift(sum!2, (i!1:N!0, j!1:D!0))
    !5!0 = lift(sum!2, (i!1:N!0, j!1:D!0))  →  sum!3 = Φ(!5!0, sum!4)
    !6!0 = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0))  →  d!3 = (!6!0 - !7!0)
    !7!0 = lift(C!0[j!1], (i!1:N!0, j!1:D!0))  →  d!3 = (!6!0 - !7!0)
    for j!1 in range(0, D!0):
    sum!3 = Φ(!5!0, sum!4)
    d!3 = (!6!0 - !7!0)
    p!3 = (d!3 * d!3)
    sum!4 = (sum!3 + p!3)  →  !6!0 = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0))
    for j!1 in range(0, D!0):
    sum!3 = Φ(!5!0, sum!4)
    d!3 = (!6!0 - !7!0)
    p!3 = (d!3 * d!3)
    sum!4 = (sum!3 + p!3)  →  !7!0 = lift(C!0[j!1], (i!1:N!0, j!1:D!0))
    sum!3 = Φ(!5!0, sum!4)  →  sum!4 = (sum!3 + p!3)
    sum!3 = Φ(!5!0, sum!4)  →  !8!0 = drop_dim(sum!3)
    sum!3 = Φ(!5!0, sum!4)  →  !9!0 = drop_dim(sum!3)
    d!3 = (!6!0 - !7!0)  →  p!3 = (d!3 * d!3)
    p!3 = (d!3 * d!3)  →  sum!4 = (sum!3 + p!3)
    !8!0 = drop_dim(sum!3)  →  !1!2 = (!8!0 < min_sum!2)
    !1!2 = (!8!0 < min_sum!2)  →  min_sum!4 = MUX(!1!2, min_sum!3, min_sum!2)
    !1!2 = (!8!0 < min_sum!2)  →  min_index!4 = MUX(!1!2, min_index!3, min_index!2)
    !9!0 = drop_dim(sum!3)  →  min_sum!3 = !9!0
    min_sum!3 = !9!0  →  min_sum!4 = MUX(!1!2, min_sum!3, min_sum!2)
    min_index!3 = i!1  →  min_index!4 = MUX(!1!2, min_index!3, min_index!2)
    !10!0 = drop_dim(min_sum!2)  →  !2!1 = (!10!0, !11!0)
    !11!0 = drop_dim(min_index!2)  →  !2!1 = (!10!0, !11!0)
Back edges:
    sum!4 = (sum!3 + p!3)  →  sum!3 = Φ(!5!0, sum!4)
    min_sum!4 = MUX(!1!2, min_sum!3, min_sum!2)  →  min_sum!2 = Φ(!3!0, min_sum!4)
    min_index!4 = MUX(!1!2, min_index!3, min_index!2)  →  min_index!2 = Φ(!4!0, min_index!4)
