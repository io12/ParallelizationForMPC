Function biometric(C: shared[list[int]], D: plaintext[int], S: shared[list[int]], N: plaintext[int]):
Entry block: 0
Exit block: 3
Block 0:
    min_sum₁ = 10000
    min_index₁ = - 1
    jump
Block 1:
    min_sum₂ = Φ(min_sum₁, min_sum₄)
    min_index₂ = Φ(min_index₁, min_index₄)
    for i: plaintext[int] in range(0, N₀)
Block 2:
    sum₂ = 0
    jump
Block 3:
    !2₁ = (min_sum₂, min_index₂)
    return !2₁
Block 4:
    sum₃ = Φ(sum₂, sum₄)
    for j: plaintext[int] in range(0, D₀)
Block 5:
    d₃ = (S₀[((i * D₀) + j)] - C₀[j])
    p₃ = (d₃ * d₃)
    sum₄ = (sum₃ + p₃)
    jump
Block 6:
    !1₂ = (sum₃ < min_sum₂)
    conditional jump !1₂
Block 7:
    min_sum₃ = sum₃
    min_index₃ = i
    jump
Block 8:
    jump
Block 9:
    (merge from conditional jump !1₂)
    min_sum₄ = MUX(!1₂, min_sum₃, min_sum₂)
    min_index₄ = MUX(!1₂, min_index₃, min_index₂)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 4, *) (4, 6, F) (4, 5, T) (5, 4, *) (6, 8, F) (6, 7, T) (7, 9, *) (8, 9, *) (9, 1, *)
