Nodes:
    hull_X!1 = []
    hull_Y!1 = []
    hull_X!2 = Φ(hull_X!1, hull_X!4)
    hull_Y!2 = Φ(hull_Y!1, hull_Y!4)
    is_hull!2 = True
    p1_X!2 = X_coords[i]
    p1_Y!2 = Y_coords[i]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    is_hull!3 = Φ(is_hull!2, is_hull!5)
    p2_X!3 = X_coords[j]
    p2_Y!3 = Y_coords[j]
    !6!3 = (p1_X!2 <= p2_X!3)
    !7!3 = (p1_Y!2 >= p2_Y!3)
    !8!3 = (!6!3 or !7!3)
    !9!3 = not !8!3
    is_hull!4 = False
    is_hull!5 = MUX(!9!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!2, is_hull!3)
    !10!2 = [p1_X!2]
    hull_X!3 = (hull_X!2 + !10!2)
    !11!2 = [p1_Y!2]
    hull_Y!3 = (hull_Y!2 + !11!2)
    hull_X!4 = MUX(is_hull!6, hull_X!3, hull_X!2)
    hull_Y!4 = MUX(is_hull!6, hull_Y!3, hull_Y!2)
    !12!1 = (hull_X!2, hull_Y!2)
Forward edges:
    hull_X!1 = []  →  hull_X!2 = Φ(hull_X!1, hull_X!4)
    hull_Y!1 = []  →  hull_Y!2 = Φ(hull_Y!1, hull_Y!4)
    hull_X!2 = Φ(hull_X!1, hull_X!4)  →  hull_X!3 = (hull_X!2 + !10!2)
    hull_X!2 = Φ(hull_X!1, hull_X!4)  →  hull_X!4 = MUX(is_hull!6, hull_X!3, hull_X!2)
    hull_X!2 = Φ(hull_X!1, hull_X!4)  →  !12!1 = (hull_X!2, hull_Y!2)
    hull_Y!2 = Φ(hull_Y!1, hull_Y!4)  →  hull_Y!3 = (hull_Y!2 + !11!2)
    hull_Y!2 = Φ(hull_Y!1, hull_Y!4)  →  hull_Y!4 = MUX(is_hull!6, hull_Y!3, hull_Y!2)
    hull_Y!2 = Φ(hull_Y!1, hull_Y!4)  →  !12!1 = (hull_X!2, hull_Y!2)
    is_hull!2 = True  →  is_hull!3 = Φ(is_hull!2, is_hull!5)
    is_hull!2 = True  →  is_hull!6 = MUX(!3!2, is_hull!2, is_hull!3)
    p1_X!2 = X_coords[i]  →  !1!2 = (p1_X!2 <= 0)
    p1_X!2 = X_coords[i]  →  !6!3 = (p1_X!2 <= p2_X!3)
    p1_X!2 = X_coords[i]  →  !10!2 = [p1_X!2]
    p1_Y!2 = Y_coords[i]  →  !2!2 = (p1_Y!2 >= 0)
    p1_Y!2 = Y_coords[i]  →  !7!3 = (p1_Y!2 >= p2_Y!3)
    p1_Y!2 = Y_coords[i]  →  !11!2 = [p1_Y!2]
    !1!2 = (p1_X!2 <= 0)  →  !3!2 = (!1!2 and !2!2)
    !2!2 = (p1_Y!2 >= 0)  →  !3!2 = (!1!2 and !2!2)
    !3!2 = (!1!2 and !2!2)  →  is_hull!6 = MUX(!3!2, is_hull!2, is_hull!3)
    is_hull!3 = Φ(is_hull!2, is_hull!5)  →  is_hull!5 = MUX(!9!3, is_hull!4, is_hull!3)
    is_hull!3 = Φ(is_hull!2, is_hull!5)  →  is_hull!6 = MUX(!3!2, is_hull!2, is_hull!3)
    p2_X!3 = X_coords[j]  →  !6!3 = (p1_X!2 <= p2_X!3)
    p2_Y!3 = Y_coords[j]  →  !7!3 = (p1_Y!2 >= p2_Y!3)
    !6!3 = (p1_X!2 <= p2_X!3)  →  !8!3 = (!6!3 or !7!3)
    !7!3 = (p1_Y!2 >= p2_Y!3)  →  !8!3 = (!6!3 or !7!3)
    !8!3 = (!6!3 or !7!3)  →  !9!3 = not !8!3
    !9!3 = not !8!3  →  is_hull!5 = MUX(!9!3, is_hull!4, is_hull!3)
    is_hull!4 = False  →  is_hull!5 = MUX(!9!3, is_hull!4, is_hull!3)
    is_hull!6 = MUX(!3!2, is_hull!2, is_hull!3)  →  hull_X!4 = MUX(is_hull!6, hull_X!3, hull_X!2)
    is_hull!6 = MUX(!3!2, is_hull!2, is_hull!3)  →  hull_Y!4 = MUX(is_hull!6, hull_Y!3, hull_Y!2)
    !10!2 = [p1_X!2]  →  hull_X!3 = (hull_X!2 + !10!2)
    hull_X!3 = (hull_X!2 + !10!2)  →  hull_X!4 = MUX(is_hull!6, hull_X!3, hull_X!2)
    !11!2 = [p1_Y!2]  →  hull_Y!3 = (hull_Y!2 + !11!2)
    hull_Y!3 = (hull_Y!2 + !11!2)  →  hull_Y!4 = MUX(is_hull!6, hull_Y!3, hull_Y!2)
Back edges:
    is_hull!5 = MUX(!9!3, is_hull!4, is_hull!3)  →  is_hull!3 = Φ(is_hull!2, is_hull!5)
    hull_X!4 = MUX(is_hull!6, hull_X!3, hull_X!2)  →  hull_X!2 = Φ(hull_X!1, hull_X!4)
    hull_Y!4 = MUX(is_hull!6, hull_Y!3, hull_Y!2)  →  hull_Y!2 = Φ(hull_Y!1, hull_Y!4)
