Function convex_hull(X_coords: shared, Y_coords: shared, N: plaintext):
Entry block: 0
Exit block: 3
Block 0:
    hull_X!1 = []
    hull_Y!1 = []
    jump
Block 1:
    hull_X!2 = Φ(hull_X!1, hull_X!4)
    hull_Y!2 = Φ(hull_Y!1, hull_Y!4)
    is_hull!1 = Φ(is_hull!0, is_hull!6)
    p1_X!1 = Φ(p1_X!0, p1_X!2)
    p1_Y!1 = Φ(p1_Y!0, p1_Y!2)
    !1!1 = Φ(!1!0, !1!2)
    !2!1 = Φ(!2!0, !2!2)
    !3!1 = Φ(!3!0, !3!2)
    p2_X!1 = Φ(p2_X!0, p2_X!4)
    p2_Y!1 = Φ(p2_Y!0, p2_Y!4)
    !4!1 = Φ(!4!0, !4!4)
    !5!1 = Φ(!5!0, !5!4)
    !6!1 = Φ(!6!0, !6!4)
    !7!1 = Φ(!7!0, !7!4)
    !8!1 = Φ(!8!0, !8!4)
    !9!1 = Φ(!9!0, !9!4)
    !10!1 = Φ(!10!0, !10!3)
    !11!1 = Φ(!11!0, !11!3)
    for i: plaintext in range(0, N!0)
Block 2:
    is_hull!2 = True
    p1_X!2 = X_coords!0[i]
    p1_Y!2 = Y_coords!0[i]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    conditional jump !3!2
Block 3:
    !12!1 = (hull_X!2, hull_Y!2)
    return !12!1
Block 4:
    jump
Block 5:
    jump
Block 6:
    is_hull!6 = Φ(is_hull!2, is_hull!3)
    p2_X!4 = Φ(p2_X!1, p2_X!2)
    p2_Y!4 = Φ(p2_Y!1, p2_Y!2)
    !4!4 = Φ(!4!1, !4!2)
    !5!4 = Φ(!5!1, !5!2)
    !6!4 = Φ(!6!1, !6!2)
    !7!4 = Φ(!7!1, !7!2)
    !8!4 = Φ(!8!1, !8!2)
    !9!4 = Φ(!9!1, !9!2)
    (merge from conditional jump !3!2)
    conditional jump is_hull!6
Block 7:
    is_hull!3 = Φ(is_hull!2, is_hull!5)
    p2_X!2 = Φ(p2_X!1, p2_X!3)
    p2_Y!2 = Φ(p2_Y!1, p2_Y!3)
    !4!2 = Φ(!4!1, !4!3)
    !5!2 = Φ(!5!1, !5!3)
    !6!2 = Φ(!6!1, !6!3)
    !7!2 = Φ(!7!1, !7!3)
    !8!2 = Φ(!8!1, !8!3)
    !9!2 = Φ(!9!1, !9!3)
    for j: plaintext in range(0, N!0)
Block 8:
    p2_X!3 = X_coords!0[j]
    p2_Y!3 = Y_coords!0[j]
    !4!3 = (p1_X!2 <= p2_X!3)
    !5!3 = (p1_Y!2 >= p2_Y!3)
    !6!3 = (p1_X!2 <= p2_X!3)
    !7!3 = (p1_Y!2 >= p2_Y!3)
    !8!3 = (!6!3 or !7!3)
    !9!3 = not !8!3
    conditional jump !9!3
Block 9:
    jump
Block 10:
    is_hull!4 = False
    jump
Block 11:
    jump
Block 12:
    is_hull!5 = Φ(is_hull!4, is_hull!3)
    (merge from conditional jump !9!3)
    jump
Block 13:
    !10!2 = [p1_X!2]
    hull_X!3 = (hull_X!2 + !10!2)
    !11!2 = [p1_Y!2]
    hull_Y!3 = (hull_Y!2 + !11!2)
    jump
Block 14:
    jump
Block 15:
    hull_X!4 = Φ(hull_X!3, hull_X!2)
    hull_Y!4 = Φ(hull_Y!3, hull_Y!2)
    !10!3 = Φ(!10!2, !10!1)
    !11!3 = Φ(!11!2, !11!1)
    (merge from conditional jump is_hull!6)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 5, F) (2, 4, T) (4, 7, *) (5, 6, *) (6, 14, F) (6, 13, T) (7, 9, F) (7, 8, T) (8, 11, F) (8, 10, T) (9, 6, *) (10, 12, *) (11, 12, *) (12, 7, *) (13, 15, *) (14, 15, *) (15, 1, *)
