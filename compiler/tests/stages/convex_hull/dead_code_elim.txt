Function convex_hull(X_coords!0: shared[list[int]], Y_coords!0: shared[list[int]], N!0: plaintext[int]) -> tuple[shared[list[int]], shared[list[int]]]:
Entry block: 0
Exit block: 3
Block 0:
    hull_X!1 = []
    hull_Y!1 = []
    jump
Block 1:
    hull_X!2 = Φ(hull_X!1, hull_X!4)
    hull_Y!2 = Φ(hull_Y!1, hull_Y!4)
    for i: plaintext[int] in range(0, N!0)
Block 2:
    is_hull!2 = True
    p1_X!2 = X_coords!0[i]
    p1_Y!2 = Y_coords!0[i]
    !1!2 = (p1_X!2 <= 0)
    !2!2 = (p1_Y!2 >= 0)
    !3!2 = (!1!2 and !2!2)
    conditional jump !3!2
Block 3:
    !12!1 = (hull_X!2, hull_Y!2)
    return !12!1
Block 4:
    jump
Block 5:
    jump
Block 6:
    (merge from conditional jump !3!2)
    is_hull!6 = MUX(!3!2, is_hull!2, is_hull!3)
    conditional jump is_hull!6
Block 7:
    is_hull!3 = Φ(is_hull!2, is_hull!5)
    for j: plaintext[int] in range(0, N!0)
Block 8:
    p2_X!3 = X_coords!0[j]
    p2_Y!3 = Y_coords!0[j]
    !6!3 = (p1_X!2 <= p2_X!3)
    !7!3 = (p1_Y!2 >= p2_Y!3)
    !8!3 = (!6!3 or !7!3)
    !9!3 = not !8!3
    conditional jump !9!3
Block 9:
    jump
Block 10:
    is_hull!4 = False
    jump
Block 11:
    jump
Block 12:
    (merge from conditional jump !9!3)
    is_hull!5 = MUX(!9!3, is_hull!4, is_hull!3)
    jump
Block 13:
    !10!2 = [p1_X!2]
    hull_X!3 = (hull_X!2 + !10!2)
    !11!2 = [p1_Y!2]
    hull_Y!3 = (hull_Y!2 + !11!2)
    jump
Block 14:
    jump
Block 15:
    (merge from conditional jump is_hull!6)
    hull_X!4 = MUX(is_hull!6, hull_X!3, hull_X!2)
    hull_Y!4 = MUX(is_hull!6, hull_Y!3, hull_Y!2)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 5, F) (2, 4, T) (4, 7, *) (5, 6, *) (6, 14, F) (6, 13, T) (7, 9, F) (7, 8, T) (8, 11, F) (8, 10, T) (9, 6, *) (10, 12, *) (11, 12, *) (12, 7, *) (13, 15, *) (14, 15, *) (15, 1, *)
