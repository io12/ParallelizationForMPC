Function(A, B, N, num_bins):
Entry block: 0
Exit block: 6
Block 0:
    result!1 = []
    jump
Block 1:
    result!2 = Φ(result!1, result!3)
    !1!1 = Φ(!1!0, !1!2)
    for i in range(0, num_bins!0)
Block 2:
    !1!2 = [0]
    result!3 = (result!2 + !1!2)
    jump
Block 3:
    jump
Block 4:
    !2!1 = Φ(!2!0, !2!2)
    result[i] = Φ(result[i], result[i])
    for i in range(0, num_bins!0)
Block 5:
    jump
Block 6:
    return result!2
Block 7:
    !2!2 = Φ(!2!1, !2!3)
    result[i] = Φ(result[i], result[i])
    for j in range(0, N!0)
Block 8:
    !2!3 = (A[j] == i)
    conditional jump !2!3
Block 9:
    jump
Block 10:
    result[i] = (result[i] + B[j])
    jump
Block 11:
    jump
Block 12:
    result[i] = Φ(result[i], result[i])
    (merge from conditional jump !2!3)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 1, *) (3, 4, *) (4, 6, F) (4, 5, T) (5, 7, *) (7, 9, F) (7, 8, T) (8, 11, F) (8, 10, T) (9, 4, *) (10, 12, *) (11, 12, *) (12, 7, *)
