Function(A, B, N, num_bins):
Entry block: 0
Exit block: 6
Block 0:
    !1 = []
    result = !1
    jump
Block 1:
    for i in range(0, num_bins)
Block 2:
    !2 = 0
    !3 = [!2]
    !4 = (result + !3)
    result = !4
    jump
Block 3:
    jump
Block 4:
    for i in range(0, num_bins)
Block 5:
    jump
Block 6:
    return result
Block 7:
    for j in range(0, N)
Block 8:
    !5 = A[j]
    !6 = (!5 == i)
    conditional jump !6
Block 9:
    jump
Block 10:
    !7 = result[i]
    !8 = B[j]
    !9 = (!7 + !8)
    result[i] = !9
    jump
Block 11:
    jump
Block 12:
    (merge from conditional jump !6)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 1, *) (3, 4, *) (4, 6, F) (4, 5, T) (5, 7, *) (7, 9, F) (7, 8, T) (8, 11, F) (8, 10, T) (9, 4, *) (10, 12, *) (11, 12, *) (12, 7, *)
