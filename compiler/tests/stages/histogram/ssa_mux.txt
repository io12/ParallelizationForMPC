Function histogram(A: shared[list[int]], B: shared[list[int]], N: plaintext[int], num_bins: plaintext[int]):
Entry block: 0
Exit block: 6
Block 0:
    result₁ = []
    jump
Block 1:
    result₂ = Φ(result₁, result₃)
    !1₁ = Φ(!1₀, !1₂)
    for i: plaintext[int] in range(0, num_bins₀)
Block 2:
    !1₂ = [0]
    result₃ = (result₂ + !1₂)
    jump
Block 3:
    jump
Block 4:
    result₄ = Φ(result₂, result₅)
    !2₁ = Φ(!2₀, !2₂)
    !3₁ = Φ(!3₀, !3₂)
    for i: plaintext[int] in range(0, num_bins₀)
Block 5:
    jump
Block 6:
    return result₄
Block 7:
    result₅ = Φ(result₄, result₇)
    !2₂ = Φ(!2₁, !2₃)
    !3₂ = Φ(!3₁, !3₄)
    for j: plaintext[int] in range(0, N₀)
Block 8:
    !2₃ = (A₀[j] == i)
    conditional jump !2₃
Block 9:
    jump
Block 10:
    !3₃ = (result₅[i] + B₀[j])
    result₆ = Update(result₅, i, !3₃)
    jump
Block 11:
    jump
Block 12:
    (merge from conditional jump !2₃)
    result₇ = MUX(!2₃, result₆, result₅)
    !3₄ = MUX(!2₃, !3₃, !3₂)
    jump
Edges: (0, 1, *) (1, 3, F) (1, 2, T) (2, 1, *) (3, 4, *) (4, 6, F) (4, 5, T) (5, 7, *) (7, 9, F) (7, 8, T) (8, 11, F) (8, 10, T) (9, 4, *) (10, 12, *) (11, 12, *) (12, 7, *)
