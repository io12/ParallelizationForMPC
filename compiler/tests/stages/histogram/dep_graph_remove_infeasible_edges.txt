Nodes:
    parameter A!0
    parameter B!0
    parameter N!0
    parameter num_bins!0
    result!1 = []
    for i!1 in range(0, num_bins!0):
    result!2 = Φ(result!1, result!3)
    !1!2 = [0]
    result!3 = (result!2 + !1!2)
    for i!2 in range(0, num_bins!0):
    result!4 = Φ(result!2, result!5)
    for j!1 in range(0, N!0):
    result!5 = Φ(result!4, result!7)
    !2!3 = (A!0[j!1] == i!2)
    !3!3 = (result!5[i!2] + B!0[j!1])
    result!6 = Update(result!5, i!2, !3!3)
    result!7 = MUX(!2!3, result!6, result!5)
Forward edges:
    parameter A!0  →  !2!3 = (A!0[j!1] == i!2)
    parameter B!0  →  !3!3 = (result!5[i!2] + B!0[j!1])
    result!1 = []  →  result!2 = Φ(result!1, result!3)
    result!2 = Φ(result!1, result!3)  →  result!3 = (result!2 + !1!2)
    result!2 = Φ(result!1, result!3)  →  result!4 = Φ(result!2, result!5)
    !1!2 = [0]  →  result!3 = (result!2 + !1!2)
    for i!2 in range(0, num_bins!0):  →  !2!3 = (A!0[j!1] == i!2)
    for i!2 in range(0, num_bins!0):  →  !3!3 = (result!5[i!2] + B!0[j!1])
    for i!2 in range(0, num_bins!0):  →  result!6 = Update(result!5, i!2, !3!3)
    result!4 = Φ(result!2, result!5)  →  result!5 = Φ(result!4, result!7)
    for j!1 in range(0, N!0):  →  !2!3 = (A!0[j!1] == i!2)
    for j!1 in range(0, N!0):  →  !3!3 = (result!5[i!2] + B!0[j!1])
    result!5 = Φ(result!4, result!7)  →  !3!3 = (result!5[i!2] + B!0[j!1])
    result!5 = Φ(result!4, result!7)  →  result!6 = Update(result!5, i!2, !3!3)
    result!5 = Φ(result!4, result!7)  →  result!7 = MUX(!2!3, result!6, result!5)
    !2!3 = (A!0[j!1] == i!2)  →  result!7 = MUX(!2!3, result!6, result!5)
    !3!3 = (result!5[i!2] + B!0[j!1])  →  result!6 = Update(result!5, i!2, !3!3)
    result!6 = Update(result!5, i!2, !3!3)  →  result!7 = MUX(!2!3, result!6, result!5)
Back edges:
    result!3 = (result!2 + !1!2)  →  result!2 = Φ(result!1, result!3)
    result!7 = MUX(!2!3, result!6, result!5)  →  result!5 = Φ(result!4, result!7)
